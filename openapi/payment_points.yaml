openapi: 3.0.3
info:
  title: Payment Points API
  contact:
    email: developer@mobilepay.dk
servers:
  - url: https://api.mobilepay.dk
    description: Production server (uses **live** data)
  - url: https://api.sandbox.mobilepay.dk
    description: Production server (uses **test** data)
paths:
  /v1/paymentpoints:
    get:
      summary: fetch a list of payment points
      operationId: get-payment-points
      description: >
        Returns a list of all merchant's payment points.
      parameters:
        - name: pageNumber
          in: query
          description: >-
            Values that are less than 1 will be replaced by 1.
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: >-
            Number of payment points to be returned.
          schema:
            type: integer
            format: int32
            default: 100
            minimum: 1
            maximum: 1000
        - name: CorrelationId
          in: header
          description: Correlation id used for logging (if you don't pass any value, we'll generate it)
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPointsList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          nullable: true
          example: '1234'
        message:
          type: string
          nullable: true
          example: >-
            Error message explaining the error that happened while processing
            the request
        correlationId:
          type: string
          example: 91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd
        origin:
          type: string
          example: MPY
    PaymentPointsList:
      type: object
      properties:
        pageSize:
          type: integer
          description: "Max number of payments that could have been returned. Only last page will contain fewer than max number of payments."
          format: int
          example: 1
        nextPageNumber:
          type: integer
          description: "Number of the next page. This value should be sent as `pageNumber` value in next request. If last page is returned `nextPageNumber` value will be `null`."
          format: int
          nullable: true
          example: 2
        paymentPoints:
          type: array
          items:
            $ref: '#/components/schemas/PaymentPoint'
          description: List of payment points.
          example:
            - PaymentPointId: 7347ba06-95c5-4181-82e5-7c7a23609a0e
              PaymentPointName: MyPaymentPoint
              State: active
    PaymentPoint:
      type: object
      properties:
        paymentPointId:
          type: string
          description: Id of the payment point.
          format: uuid
          example: 7347ba06-95c5-4181-82e5-7c7a23609a0e
        paymentPointName:
          type: string
          description: Merchant-defined Payment Point name.
          nullable: true
          example: MyPaymentPoint
        state:
          enum:
            - created
            - active
          type: string
          description: The current state of the payment point.
          example: active
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
      bearerFormat: API key
      description: >-
        Authorization header using the Bearer scheme, e.g., `Authorization: Bearer {api key}`
    openId:
      type: openIdConnect
      openIdConnectUrl: https://api.mobilepay.dk/merchant-authentication-openidconnect/.well-known/openid-configuration
      description: >-
        Obtain a consent from your client (with scope `merchantpayments`), retrieve an acess token and send it in `Authorization` header using the Bearer scheme, 
        e.g., `Authorization: Bearer {access token}`
security:
  - apiKey: []
  - openId:
      - merchantpayments
